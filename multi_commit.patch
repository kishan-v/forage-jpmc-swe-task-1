From 5f41910b21a82d868c9a8c7f54b3ad0ec8372e5c Mon Sep 17 00:00:00 2001
From: Kishan <kishanvijayarajah03@gmail.com>
Date: Sun, 20 Aug 2023 20:46:27 +0100
Subject: [PATCH 1/2] fixed price calc, ratio calc and printing

---
 client3.py | 11 ++++++++---
 1 file changed, 8 insertions(+), 3 deletions(-)

diff --git a/client3.py b/client3.py
index 3fc09b7..21efa20 100644
--- a/client3.py
+++ b/client3.py
@@ -35,18 +35,22 @@ def getDataPoint(quote):
     stock = quote['stock']
     bid_price = float(quote['top_bid']['price'])
     ask_price = float(quote['top_ask']['price'])
-    price = bid_price
+    price = (bid_price + ask_price) / 2
     return stock, bid_price, ask_price, price
 
 
 def getRatio(price_a, price_b):
     """ Get ratio of price_a and price_b """
     """ ------------- Update this function ------------- """
-    return 1
+    if price_b != 0:
+        return price_a / price_b
+    return 0 # error
+    
 
 
 # Main
 if __name__ == "__main__":
+    prices = {}
     # Query the price once every N seconds.
     for _ in iter(range(N)):
         quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
@@ -54,6 +58,7 @@ if __name__ == "__main__":
         """ ----------- Update to get the ratio --------------- """
         for quote in quotes:
             stock, bid_price, ask_price, price = getDataPoint(quote)
+            prices[stock] = price
             print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
 
-        print("Ratio %s" % getRatio(price, price))
+        print("Ratio %s" % getRatio(prices['ABC'], prices['DEF']))
-- 
2.39.2 (Apple Git-143)


From d1f43ba10009ff1f4010aaf934242f3f9b5735be Mon Sep 17 00:00:00 2001
From: Kishan <kishanvijayarajah03@gmail.com>
Date: Sun, 20 Aug 2023 22:40:35 +0100
Subject: [PATCH 2/2] finished dataPoint tests 1,2 made getRatio test

---
 client_test.py | 18 ++++++++++++++----
 1 file changed, 14 insertions(+), 4 deletions(-)

diff --git a/client_test.py b/client_test.py
index af2bf26..104f5aa 100644
--- a/client_test.py
+++ b/client_test.py
@@ -1,5 +1,6 @@
 import unittest
 from client3 import getDataPoint
+from client3 import getRatio
 
 class ClientTest(unittest.TestCase):
   def test_getDataPoint_calculatePrice(self):
@@ -8,18 +9,27 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
-
+    for quote in quotes:
+      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'],(quote['top_bid']['price'] + quote['top_ask']['price'])/2 )) 
+    
   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
     quotes = [
       {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
-
+    for quote in quotes:
+      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'],(quote['top_bid']['price'] + quote['top_ask']['price'])/2 )) 
 
   """ ------------ Add more unit tests ------------ """
-
-
+  
+  def test_getRatio(self):
+    quotes = [
+      {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+    ]
+    
+    self.assertEqual(getRatio(((quotes[0]['top_bid']['price'] + quotes[0]['top_ask']['price'])/2), ((quotes[1]['top_bid']['price'] + quotes[1]['top_ask']['price'])/2)), ((quotes[0]['top_bid']['price'] + quotes[0]['top_ask']['price'])/2) / ((quotes[1]['top_bid']['price'] + quotes[1]['top_ask']['price'])/2))
 
 if __name__ == '__main__':
     unittest.main()
-- 
2.39.2 (Apple Git-143)

